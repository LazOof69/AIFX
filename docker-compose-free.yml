# Free Deployment Docker Compose
# 免費部署 Docker Compose 配置

version: '3.8'

services:
  aifx-web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/home/aifx/app/src/main/python
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - AIFX_ENV=production
      - AIFX_ROOT=/home/aifx/app
      - AIFX_DATA_DIR=/home/aifx/app/data
      - AIFX_MODELS_DIR=/home/aifx/app/models
      - AIFX_OUTPUT_DIR=/home/aifx/app/output
      - AIFX_LOGS_DIR=/home/aifx/app/logs
      - TF_CPP_MIN_LOG_LEVEL=2
      - SKIP_NETWORK_TESTS=true
      - DATABASE_URL=postgresql://aifx:password@db:5432/aifx
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_DB=aifx
      - POSTGRES_USER=aifx
      - POSTGRES_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8000
      - HOST=0.0.0.0
    depends_on:
      - db
      - redis
    volumes:
      - ./data:/home/aifx/app/data
      - ./logs:/home/aifx/app/logs
      - ./models:/home/aifx/app/models
      - ./output:/home/aifx/app/output
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: aifx
      POSTGRES_USER: aifx
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: Simple monitoring
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  grafana_data: