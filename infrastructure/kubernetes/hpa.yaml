# AIFX - Horizontal Pod Autoscaler Configuration
# AIFX - 水平Pod自動擴展配置

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aifx-app-hpa
  namespace: aifx
  labels:
    app: aifx-app
    app.kubernetes.io/name: aifx
    app.kubernetes.io/instance: aifx
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/component: hpa
    app.kubernetes.io/part-of: aifx-trading-system
    app.kubernetes.io/managed-by: kubernetes
    environment: production
  annotations:
    description: "HPA for AIFX main application based on CPU, memory, and custom metrics"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aifx-app
  minReplicas: 3
  maxReplicas: 20
  metrics:
  # CPU Utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory Utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom Metrics - HTTP Requests per Second
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  # Custom Metrics - Trading Signal Processing Rate
  - type: Pods
    pods:
      metric:
        name: trading_signals_processed_per_minute
      target:
        type: AverageValue
        averageValue: "1000"
  # External Metrics - Queue Depth
  - type: External
    external:
      metric:
        name: redis_queue_length
        selector:
          matchLabels:
            queue: "trading-signals"
      target:
        type: Value
        value: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: aifx-ai-worker-hpa
  namespace: aifx
  labels:
    app: aifx-ai-worker
    app.kubernetes.io/name: aifx-ai-worker
    app.kubernetes.io/instance: aifx
    app.kubernetes.io/version: "4.0.0"
    app.kubernetes.io/component: hpa
    app.kubernetes.io/part-of: aifx-trading-system
    app.kubernetes.io/managed-by: kubernetes
    environment: production
  annotations:
    description: "HPA for AIFX AI workers based on AI workload metrics"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aifx-ai-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  # CPU Utilization (AI workloads are CPU intensive)
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  # Memory Utilization (AI models require significant memory)
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  # Custom Metrics - AI Model Inference Queue
  - type: Pods
    pods:
      metric:
        name: ai_inference_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  # Custom Metrics - Model Training Jobs
  - type: Pods
    pods:
      metric:
        name: active_model_training_jobs
      target:
        type: AverageValue
        averageValue: "2"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # 10 minutes (AI workers need time to complete tasks)
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 180  # 3 minutes (allow time for AI workload assessment)
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aifx-app-pdb
  namespace: aifx
  labels:
    app: aifx-app
    app.kubernetes.io/name: aifx
    app.kubernetes.io/instance: aifx
    app.kubernetes.io/component: pdb
    environment: production
  annotations:
    description: "Pod Disruption Budget for AIFX application to ensure high availability"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: aifx-app
      app.kubernetes.io/name: aifx
      app.kubernetes.io/instance: aifx

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: aifx-ai-worker-pdb
  namespace: aifx
  labels:
    app: aifx-ai-worker
    app.kubernetes.io/name: aifx-ai-worker
    app.kubernetes.io/instance: aifx
    app.kubernetes.io/component: pdb
    environment: production
  annotations:
    description: "Pod Disruption Budget for AIFX AI workers"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: aifx-ai-worker
      app.kubernetes.io/name: aifx-ai-worker
      app.kubernetes.io/instance: aifx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aifx-hpa-config
  namespace: aifx
  labels:
    app: aifx-app
    app.kubernetes.io/component: configuration
    environment: production
  annotations:
    description: "Configuration for HPA custom metrics"
data:
  # Custom Metrics Configuration
  custom-metrics-config.yaml: |
    metrics:
      http_requests_per_second:
        description: "HTTP requests per second processed by the application"
        query: "sum(rate(http_requests_total[1m]))"
        threshold: 100
      trading_signals_processed_per_minute:
        description: "Trading signals processed per minute"
        query: "sum(rate(trading_signals_processed_total[1m]) * 60)"
        threshold: 1000
      ai_inference_queue_length:
        description: "Number of pending AI inference requests"
        query: "sum(ai_inference_queue_size)"
        threshold: 10
      active_model_training_jobs:
        description: "Number of active model training jobs"
        query: "sum(model_training_jobs_active)"
        threshold: 2
      redis_queue_length:
        description: "Redis queue length for trading signals"
        query: "sum(redis_list_length{queue=\"trading-signals\"})"
        threshold: 50
  
  # Scaling Policies Configuration
  scaling-policies.yaml: |
    policies:
      conservative:
        scaleUp:
          stabilizationWindowSeconds: 300
          maxScaleUpPercent: 25
        scaleDown:
          stabilizationWindowSeconds: 600
          maxScaleDownPercent: 10
      aggressive:
        scaleUp:
          stabilizationWindowSeconds: 60
          maxScaleUpPercent: 100
        scaleDown:
          stabilizationWindowSeconds: 300
          maxScaleDownPercent: 25
      ai_workload:
        scaleUp:
          stabilizationWindowSeconds: 180
          maxScaleUpPercent: 100
        scaleDown:
          stabilizationWindowSeconds: 600
          maxScaleDownPercent: 25

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: aifx-hpa-metrics
  namespace: aifx
  labels:
    app: aifx-app
    app.kubernetes.io/component: monitoring
    environment: production
spec:
  selector:
    matchLabels:
      app: aifx-app
  endpoints:
  - port: metrics
    interval: 15s
    path: /metrics
    scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
    - aifx