# AIFX Optimized Production Docker Compose Configuration
# AIFX 優化生產環境 Docker Compose 配置

services:
  aifx-web-signals:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: aifx-trading-signals-optimized
    ports:
      - "${AIFX_WEB_PORT:-8080}:8080"
    environment:
      # Application configuration
      - AIFX_ENVIRONMENT=production
      - AIFX_IN_CONTAINER=true
      - AIFX_WEB_PORT=8080
      - AIFX_LOG_LEVEL=${AIFX_LOG_LEVEL:-INFO}
      - AIFX_DEBUG=${AIFX_DEBUG:-false}

      # Trading configuration
      - AIFX_RISK_PER_TRADE=${AIFX_RISK_PER_TRADE:-0.01}
      - AIFX_MAX_POSITIONS=${AIFX_MAX_POSITIONS:-1}
      - AIFX_MIN_CONFIDENCE=${AIFX_MIN_CONFIDENCE:-0.6}

      # Performance tuning
      - PYTHONOPTIMIZE=1
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
      - OPENBLAS_NUM_THREADS=2

    volumes:
      - ./logs:/app/logs:rw
      - ./data/cache:/app/data/cache:rw
      - aifx_data_volume:/app/output:rw

    networks:
      - aifx-optimized-network

    # Resource limits for production
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

    # Restart policy
    restart: unless-stopped

    # Health check override
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 45s

    # Logging configuration for production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Redis for caching (production enhancement)
  redis-cache:
    image: redis:7-alpine
    container_name: aifx-redis-cache
    profiles:
      - cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_MAXMEMORY=128mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    volumes:
      - redis_cache_data:/data
    networks:
      - aifx-optimized-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru

  # Optional: Nginx reverse proxy (production)
  nginx-proxy:
    image: nginx:alpine
    container_name: aifx-nginx-proxy
    profiles:
      - proxy
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - aifx-optimized-network
    depends_on:
      - aifx-web-signals
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

networks:
  aifx-optimized-network:
    name: aifx-optimized-network
    driver: bridge

volumes:
  aifx_data_volume:
    name: aifx_optimized_data
  redis_cache_data:
    name: aifx_redis_cache